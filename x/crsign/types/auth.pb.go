// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: crsign/auth.proto

package types

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AuthStatus int32

const (
	AuthStatus_AUTH_OPEN   AuthStatus = 0
	AuthStatus_AUTH_SIGNED AuthStatus = 1
	AuthStatus_AUTH_CLOSED AuthStatus = 2
)

var AuthStatus_name = map[int32]string{
	0: "AUTH_OPEN",
	1: "AUTH_SIGNED",
	2: "AUTH_CLOSED",
}

var AuthStatus_value = map[string]int32{
	"AUTH_OPEN":   0,
	"AUTH_SIGNED": 1,
	"AUTH_CLOSED": 2,
}

func (x AuthStatus) String() string {
	return proto.EnumName(AuthStatus_name, int32(x))
}

func (AuthStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1c662e8d2f1cb3ea, []int{0}
}

type Auth struct {
	Service        string     `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Identity       string     `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	Key            string     `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Status         AuthStatus `protobuf:"varint,4,opt,name=status,proto3,enum=metabelarus.mbcorecr.crsign.AuthStatus" json:"status,omitempty"`
	CreationDt     *time.Time `protobuf:"bytes,5,opt,name=creationDt,proto3,stdtime" json:"creationDt,omitempty"`
	AvailabilityDt *time.Time `protobuf:"bytes,6,opt,name=availabilityDt,proto3,stdtime" json:"availabilityDt,omitempty"`
}

func (m *Auth) Reset()         { *m = Auth{} }
func (m *Auth) String() string { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()    {}
func (*Auth) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c662e8d2f1cb3ea, []int{0}
}
func (m *Auth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Auth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Auth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Auth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Auth.Merge(m, src)
}
func (m *Auth) XXX_Size() int {
	return m.Size()
}
func (m *Auth) XXX_DiscardUnknown() {
	xxx_messageInfo_Auth.DiscardUnknown(m)
}

var xxx_messageInfo_Auth proto.InternalMessageInfo

func (m *Auth) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *Auth) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *Auth) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Auth) GetStatus() AuthStatus {
	if m != nil {
		return m.Status
	}
	return AuthStatus_AUTH_OPEN
}

func (m *Auth) GetCreationDt() *time.Time {
	if m != nil {
		return m.CreationDt
	}
	return nil
}

func (m *Auth) GetAvailabilityDt() *time.Time {
	if m != nil {
		return m.AvailabilityDt
	}
	return nil
}

type MsgRequestAuth struct {
	Service    string     `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Identity   string     `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	Key        string     `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	CreationDt *time.Time `protobuf:"bytes,4,opt,name=creationDt,proto3,stdtime" json:"creationDt,omitempty"`
}

func (m *MsgRequestAuth) Reset()         { *m = MsgRequestAuth{} }
func (m *MsgRequestAuth) String() string { return proto.CompactTextString(m) }
func (*MsgRequestAuth) ProtoMessage()    {}
func (*MsgRequestAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c662e8d2f1cb3ea, []int{1}
}
func (m *MsgRequestAuth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestAuth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestAuth.Merge(m, src)
}
func (m *MsgRequestAuth) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestAuth.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestAuth proto.InternalMessageInfo

func (m *MsgRequestAuth) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *MsgRequestAuth) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *MsgRequestAuth) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MsgRequestAuth) GetCreationDt() *time.Time {
	if m != nil {
		return m.CreationDt
	}
	return nil
}

type MsgConfirmAuth struct {
	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Service  string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
}

func (m *MsgConfirmAuth) Reset()         { *m = MsgConfirmAuth{} }
func (m *MsgConfirmAuth) String() string { return proto.CompactTextString(m) }
func (*MsgConfirmAuth) ProtoMessage()    {}
func (*MsgConfirmAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c662e8d2f1cb3ea, []int{2}
}
func (m *MsgConfirmAuth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgConfirmAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgConfirmAuth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgConfirmAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgConfirmAuth.Merge(m, src)
}
func (m *MsgConfirmAuth) XXX_Size() int {
	return m.Size()
}
func (m *MsgConfirmAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgConfirmAuth.DiscardUnknown(m)
}

var xxx_messageInfo_MsgConfirmAuth proto.InternalMessageInfo

func (m *MsgConfirmAuth) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *MsgConfirmAuth) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type Id2Service struct {
	Services []string `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
}

func (m *Id2Service) Reset()         { *m = Id2Service{} }
func (m *Id2Service) String() string { return proto.CompactTextString(m) }
func (*Id2Service) ProtoMessage()    {}
func (*Id2Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c662e8d2f1cb3ea, []int{3}
}
func (m *Id2Service) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Id2Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Id2Service.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Id2Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id2Service.Merge(m, src)
}
func (m *Id2Service) XXX_Size() int {
	return m.Size()
}
func (m *Id2Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Id2Service.DiscardUnknown(m)
}

var xxx_messageInfo_Id2Service proto.InternalMessageInfo

func (m *Id2Service) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

func init() {
	proto.RegisterEnum("metabelarus.mbcorecr.crsign.AuthStatus", AuthStatus_name, AuthStatus_value)
	proto.RegisterType((*Auth)(nil), "metabelarus.mbcorecr.crsign.Auth")
	proto.RegisterType((*MsgRequestAuth)(nil), "metabelarus.mbcorecr.crsign.MsgRequestAuth")
	proto.RegisterType((*MsgConfirmAuth)(nil), "metabelarus.mbcorecr.crsign.MsgConfirmAuth")
	proto.RegisterType((*Id2Service)(nil), "metabelarus.mbcorecr.crsign.Id2Service")
}

func init() { proto.RegisterFile("crsign/auth.proto", fileDescriptor_1c662e8d2f1cb3ea) }

var fileDescriptor_1c662e8d2f1cb3ea = []byte{
	// 429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xc1, 0x6e, 0x13, 0x31,
	0x10, 0x8d, 0x93, 0x10, 0xe8, 0x54, 0x84, 0x60, 0x71, 0xb0, 0x82, 0xb4, 0x8d, 0x72, 0x21, 0xe2,
	0x60, 0x4b, 0xe1, 0x8c, 0xa0, 0x6d, 0x02, 0xa9, 0x04, 0x2d, 0x4a, 0xca, 0x85, 0x0b, 0xf2, 0x6e,
	0xdd, 0x8d, 0x45, 0x36, 0x0e, 0xf6, 0x6c, 0x45, 0xfe, 0xa2, 0x67, 0xf8, 0x21, 0x8e, 0x3d, 0x72,
	0x03, 0x25, 0x3f, 0x82, 0xd6, 0x9b, 0x6d, 0xb7, 0x39, 0x20, 0x90, 0xb8, 0xf9, 0x79, 0xde, 0x9b,
	0x7d, 0x6f, 0x76, 0x0c, 0x0f, 0x23, 0xeb, 0x74, 0x3c, 0x17, 0x32, 0xc5, 0x29, 0x5f, 0x58, 0x83,
	0x86, 0x3e, 0x4e, 0x14, 0xca, 0x50, 0xcd, 0xa4, 0x4d, 0x1d, 0x4f, 0xc2, 0xc8, 0x58, 0x15, 0x59,
	0x9e, 0xf3, 0xda, 0x8f, 0x62, 0x13, 0x1b, 0xcf, 0x13, 0xd9, 0x29, 0x97, 0xb4, 0xf7, 0x62, 0x63,
	0xe2, 0x99, 0x12, 0x1e, 0x85, 0xe9, 0xb9, 0x40, 0x9d, 0x28, 0x87, 0x32, 0x59, 0xe4, 0x84, 0xee,
	0xb7, 0x2a, 0xd4, 0xf7, 0x53, 0x9c, 0x52, 0x06, 0x77, 0x9d, 0xb2, 0x17, 0x3a, 0x52, 0x8c, 0x74,
	0x48, 0x6f, 0x67, 0x5c, 0x40, 0xda, 0x86, 0x7b, 0xfa, 0x4c, 0xcd, 0x51, 0xe3, 0x92, 0x55, 0x7d,
	0xe9, 0x1a, 0xd3, 0x16, 0xd4, 0x3e, 0xa9, 0x25, 0xab, 0xf9, 0xeb, 0xec, 0x48, 0x5f, 0x40, 0xc3,
	0xa1, 0xc4, 0xd4, 0xb1, 0x7a, 0x87, 0xf4, 0x9a, 0xfd, 0x27, 0xfc, 0x0f, 0xae, 0x79, 0xf6, 0xe9,
	0x89, 0xa7, 0x8f, 0x37, 0x32, 0xfa, 0x12, 0x20, 0xb2, 0x4a, 0xa2, 0x36, 0xf3, 0x01, 0xb2, 0x3b,
	0x1d, 0xd2, 0xdb, 0xed, 0xb7, 0x79, 0x9e, 0x83, 0x17, 0x39, 0xf8, 0x69, 0x91, 0xe3, 0xa0, 0x7e,
	0xf9, 0x73, 0x8f, 0x8c, 0x4b, 0x1a, 0x3a, 0x82, 0xa6, 0xbc, 0x90, 0x7a, 0x26, 0x43, 0x3d, 0xd3,
	0xb8, 0x1c, 0x20, 0x6b, 0xfc, 0x65, 0x97, 0x2d, 0x5d, 0xf7, 0x2b, 0x81, 0xe6, 0x5b, 0x17, 0x8f,
	0xd5, 0xe7, 0x54, 0x39, 0xfc, 0xaf, 0x73, 0xba, 0x1d, 0xb3, 0xfe, 0xef, 0x31, 0xbb, 0xaf, 0xbc,
	0xb7, 0x43, 0x33, 0x3f, 0xd7, 0x36, 0xf1, 0xde, 0xca, 0x0e, 0xc8, 0x96, 0x83, 0x92, 0xef, 0xea,
	0x2d, 0xdf, 0xdd, 0x1e, 0xc0, 0xd1, 0x59, 0x7f, 0x72, 0x93, 0x62, 0x53, 0x70, 0x8c, 0x74, 0x6a,
	0x59, 0x8f, 0x02, 0x3f, 0x7d, 0x0e, 0x70, 0xf3, 0xc3, 0xe8, 0x7d, 0xd8, 0xd9, 0x7f, 0x7f, 0x3a,
	0xfa, 0x78, 0xf2, 0x6e, 0x78, 0xdc, 0xaa, 0xd0, 0x07, 0xb0, 0xeb, 0xe1, 0xe4, 0xe8, 0xf5, 0xf1,
	0x70, 0xd0, 0x22, 0xd7, 0x17, 0x87, 0x6f, 0x4e, 0x26, 0xc3, 0x41, 0xab, 0x7a, 0x30, 0xfa, 0xbe,
	0x0a, 0xc8, 0xd5, 0x2a, 0x20, 0xbf, 0x56, 0x01, 0xb9, 0x5c, 0x07, 0x95, 0xab, 0x75, 0x50, 0xf9,
	0xb1, 0x0e, 0x2a, 0x1f, 0x78, 0xac, 0x71, 0x9a, 0x86, 0x3c, 0x32, 0x89, 0x28, 0xad, 0x8b, 0x28,
	0xd6, 0x45, 0x7c, 0x11, 0x9b, 0xe7, 0x80, 0xcb, 0x85, 0x72, 0x61, 0xc3, 0x0f, 0xe8, 0xd9, 0xef,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x42, 0x33, 0x6f, 0x25, 0x03, 0x00, 0x00,
}

func (m *Auth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Auth) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Auth) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AvailabilityDt != nil {
		n1, err1 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.AvailabilityDt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.AvailabilityDt):])
		if err1 != nil {
			return 0, err1
		}
		i -= n1
		i = encodeVarintAuth(dAtA, i, uint64(n1))
		i--
		dAtA[i] = 0x32
	}
	if m.CreationDt != nil {
		n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreationDt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreationDt):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintAuth(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x2a
	}
	if m.Status != 0 {
		i = encodeVarintAuth(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Identity) > 0 {
		i -= len(m.Identity)
		copy(dAtA[i:], m.Identity)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.Identity)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Service) > 0 {
		i -= len(m.Service)
		copy(dAtA[i:], m.Service)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.Service)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRequestAuth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestAuth) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestAuth) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreationDt != nil {
		n3, err3 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.CreationDt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreationDt):])
		if err3 != nil {
			return 0, err3
		}
		i -= n3
		i = encodeVarintAuth(dAtA, i, uint64(n3))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Identity) > 0 {
		i -= len(m.Identity)
		copy(dAtA[i:], m.Identity)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.Identity)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Service) > 0 {
		i -= len(m.Service)
		copy(dAtA[i:], m.Service)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.Service)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgConfirmAuth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgConfirmAuth) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgConfirmAuth) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Service) > 0 {
		i -= len(m.Service)
		copy(dAtA[i:], m.Service)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.Service)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Identity) > 0 {
		i -= len(m.Identity)
		copy(dAtA[i:], m.Identity)
		i = encodeVarintAuth(dAtA, i, uint64(len(m.Identity)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Id2Service) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Id2Service) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Id2Service) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Services) > 0 {
		for iNdEx := len(m.Services) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Services[iNdEx])
			copy(dAtA[i:], m.Services[iNdEx])
			i = encodeVarintAuth(dAtA, i, uint64(len(m.Services[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintAuth(dAtA []byte, offset int, v uint64) int {
	offset -= sovAuth(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Auth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Service)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.Identity)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovAuth(uint64(m.Status))
	}
	if m.CreationDt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreationDt)
		n += 1 + l + sovAuth(uint64(l))
	}
	if m.AvailabilityDt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.AvailabilityDt)
		n += 1 + l + sovAuth(uint64(l))
	}
	return n
}

func (m *MsgRequestAuth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Service)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.Identity)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	if m.CreationDt != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.CreationDt)
		n += 1 + l + sovAuth(uint64(l))
	}
	return n
}

func (m *MsgConfirmAuth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Identity)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	l = len(m.Service)
	if l > 0 {
		n += 1 + l + sovAuth(uint64(l))
	}
	return n
}

func (m *Id2Service) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Services) > 0 {
		for _, s := range m.Services {
			l = len(s)
			n += 1 + l + sovAuth(uint64(l))
		}
	}
	return n
}

func sovAuth(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAuth(x uint64) (n int) {
	return sovAuth(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Auth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Auth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Auth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Service", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Service = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Identity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Identity = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= AuthStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationDt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreationDt == nil {
				m.CreationDt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreationDt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvailabilityDt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AvailabilityDt == nil {
				m.AvailabilityDt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.AvailabilityDt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRequestAuth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestAuth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestAuth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Service", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Service = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Identity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Identity = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationDt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreationDt == nil {
				m.CreationDt = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.CreationDt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgConfirmAuth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgConfirmAuth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgConfirmAuth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Identity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Identity = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Service", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Service = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Id2Service) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Id2Service: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Id2Service: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Services", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuth
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuth
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Services = append(m.Services, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAuth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAuth(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAuth
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAuth
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAuth
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAuth
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAuth        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAuth          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAuth = fmt.Errorf("proto: unexpected end of group")
)
